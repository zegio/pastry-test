{"ast":null,"code":"var _jsxFileName = \"/home/eric/projects/pasticceriaLuana&Maria/src/components/admin/ProductForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button, Col, Image } from 'react-bootstrap';\nimport FileBase64 from 'react-file-base64';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductForm = ({\n  handleSubmit,\n  form,\n  setForm,\n  image,\n  setImage\n}) => {\n  _s();\n\n  const [errors, setErrors] = useState({});\n\n  const setFile = file => {\n    setImage(file);\n    setForm({ ...form,\n      [\"image\"]: file\n    });\n  };\n\n  const isEmptyImage = obj => {\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop)) {\n        return false;\n      }\n    }\n\n    return JSON.stringify(obj) === JSON.stringify({});\n  };\n\n  const controlForm = form => {\n    //validate handle react / react hook / yup / ..\n    for (const [key, value] of Object.entries(form)) {\n      if (!value) {\n        setErrors({\n          [key]: \"required*\"\n        });\n        return false;\n      }\n    } // lodash _.isEmpty({});\n\n\n    if (isEmptyImage(form.image)) {\n      setErrors({\n        ['image']: \"required*\"\n      });\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleChange = target => {\n    setForm({ ...form,\n      [target.name]: target.value\n    });\n  };\n\n  const handleChangeIngredients = target => {\n    setForm({ ...form,\n      ['description']: form.description[target.name] = target.value\n    });\n  };\n\n  const submitForm = e => {\n    console.log(form); // if(controlForm(form)){\n    //   handleSubmit(e, {...form})\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      'margin-top': '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        md: 4,\n        xs: 12,\n        controlId: \"formGridName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Nome*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"Nome\",\n          name: \"name\",\n          value: form.name,\n          onChange: e => handleChange(e.target)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        md: 4,\n        xs: 12,\n        controlId: \"formGridPrice\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Prezzo Iniziale*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          placeholder: \"Prezzo\",\n          name: \"initialPrice\",\n          value: form.initialPrice,\n          onChange: e => handleChange(e.target)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.initialPrice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        md: 4,\n        xs: 12,\n        controlId: \"formGridState\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Valuta*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          name: \"currency\",\n          value: form.currency,\n          onChange: e => handleChange(e.target),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"\\u20AC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"\\xA3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.currency\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      as: Col,\n      md: 4,\n      xs: 12,\n      controlId: \"formGridName\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Ingredienti\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), form.description.map(ingredient => /*#__PURE__*/_jsxDEV(Form.Control, {\n        style: {\n          marginBottom: '15px'\n        },\n        placeholder: \"Ingrediente\",\n        name: ingredient.key,\n        value: ingredient,\n        onChange: e => handleChangeIngredients(e.target)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        controlId: \"Image\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Immagine*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FileBase64, {\n          onDone: setFile.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: image.base64\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"button\",\n      onClick: submitForm,\n      children: \"Salva\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductForm, \"o+SUXTQUSJNurFcpxixiLrA9BM0=\");\n\n_c = ProductForm;\nexport default ProductForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"sources":["/home/eric/projects/pasticceriaLuana&Maria/src/components/admin/ProductForm.js"],"names":["React","useState","Form","Button","Col","Image","FileBase64","ProductForm","handleSubmit","form","setForm","image","setImage","errors","setErrors","setFile","file","isEmptyImage","obj","prop","hasOwnProperty","JSON","stringify","controlForm","key","value","Object","entries","handleChange","target","name","handleChangeIngredients","description","submitForm","e","console","log","initialPrice","currency","map","ingredient","marginBottom","bind","base64"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Form, Button, Col, Image } from 'react-bootstrap';\nimport FileBase64 from 'react-file-base64';\n\nconst ProductForm = ( { handleSubmit, form, setForm, image, setImage } ) => {\n\n  const [errors, setErrors] = useState({})\n\n  const setFile = (file) => {\n    setImage(file)\n    setForm({\n      ...form,\n      [\"image\"]: file\n    })\n  }\n\n  const isEmptyImage = (obj) => {\n    for(var prop in obj) {\n      if(obj.hasOwnProperty(prop)) {\n        return false;\n      }\n    }\n    return JSON.stringify(obj) === JSON.stringify({});\n  }\n\n  const controlForm = (form) => {\n    \n    //validate handle react / react hook / yup / ..\n    for (const [key, value] of Object.entries(form)) {\n      if(!value){\n        setErrors({ [key]: \"required*\"})\n        return false\n      } \n    }\n    // lodash _.isEmpty({});\n    if(isEmptyImage(form.image)){\n      setErrors({ ['image']: \"required*\"})\n      return false \n    }\n\n    return true\n  }\n\n  const handleChange = (target) => {\n    setForm({\n      ...form,\n      [target.name]: target.value\n    })\n  }\n\n  const handleChangeIngredients = (target) => {\n    setForm({\n      ...form,\n      ['description']: form.description[target.name] = target.value\n    })\n  }\n\n  const submitForm = e => {\n    console.log(form)\n    // if(controlForm(form)){\n    //   handleSubmit(e, {...form})\n    // }\n  }\n\n  return(\n    <Form style={{'margin-top': '50px'}}>\n      <Form.Row>\n        <Form.Group as={Col} md={4} xs={12} controlId=\"formGridName\">\n          <Form.Label>Nome*</Form.Label>\n          <Form.Control placeholder=\"Nome\" name=\"name\" value={form.name} onChange={e => handleChange(e.target)} />\n          <p>{errors.name}</p>\n        </Form.Group>\n\n        <Form.Group as={Col} md={4} xs={12} controlId=\"formGridPrice\">\n        <Form.Label>Prezzo Iniziale*</Form.Label>\n          <Form.Control type='number' placeholder=\"Prezzo\" name=\"initialPrice\" value={form.initialPrice} onChange={e => handleChange(e.target)} />\n          <p>{errors.initialPrice}</p>\n        </Form.Group>\n\n        <Form.Group as={Col} md={4} xs={12} controlId=\"formGridState\">\n          <Form.Label>Valuta*</Form.Label>\n          <Form.Control as=\"select\" name='currency' value={form.currency} onChange={e => handleChange(e.target)}>\n            <option></option>\n            <option>€</option>\n            <option>$</option>\n            <option>£</option>\n          </Form.Control>\n          <p>{errors.currency}</p>\n        </Form.Group>\n      </Form.Row>\n\n      <Form.Group as={Col} md={4} xs={12} controlId=\"formGridName\">\n      <Form.Label>Ingredienti</Form.Label>\n        { \n          form.description.map(ingredient => (\n            <Form.Control style={{marginBottom: '15px'}} placeholder=\"Ingrediente\" name={ingredient.key} value={ingredient} onChange={e => handleChangeIngredients(e.target)} />\n          )) \n        }\n        {/* <Button variant=\"primary\" type=\"button\" onClick={addIngredient()}>Aggiungi</Button> */}\n      </Form.Group>\n      {/* <Form.Group controlId=\"exampleForm.ControlTextarea\">\n        <Form.Label>Descrizione</Form.Label>\n        <Form.Control as=\"textarea\" rows={3} name=\"description\" value={form.description} onChange={e => handleChange(e.target)} />\n      </Form.Group>\n       */}\n      <Form.Row>\n        <Form.Group as={Col} controlId=\"Image\">\n          <Form.Label>Immagine*</Form.Label>\n          <br />\n          <FileBase64\n            onDone={ setFile.bind(this) } />\n          <p>{errors.image}</p>\n        </Form.Group>\n        <Form.Group as={Col}>\n          <Image src={image.base64} />\n        </Form.Group>\n      </Form.Row>\n\n      <Button variant=\"primary\" type=\"button\" onClick={submitForm}>\n        Salva\n      </Button>\n    </Form>  \n    )\n\n}\n\nexport default ProductForm\n"]},"metadata":{},"sourceType":"module"}