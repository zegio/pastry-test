{"ast":null,"code":"var _jsxFileName = \"/home/eric/projects/pasticceriaLuana&Maria/src/components/admin/ProductForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button, Col, Image } from 'react-bootstrap';\nimport FileBase64 from 'react-file-base64';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductForm = ({\n  handleSubmit,\n  form,\n  setForm,\n  image,\n  setImage\n}) => {\n  _s();\n\n  this.state = form;\n  const [errors, setErrors] = useState({});\n\n  const setFile = file => {\n    setImage(file);\n    this.setState({ ...this.state,\n      [\"image\"]: file\n    });\n  };\n\n  const isEmptyImage = obj => {\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop)) {\n        return false;\n      }\n    }\n\n    return JSON.stringify(obj) === JSON.stringify({});\n  };\n\n  const controlForm = state => {\n    //clean empty ingredients    \n    this.setState({ ...this.state,\n      ['ingredients']: this.state.ingredients.filter(ingredient => {\n        return ingredient !== '';\n      })\n    }); //validate handle react / react hook / yup / ..\n\n    for (const [key, value] of Object.entries(this.state)) {\n      if (!value) {\n        setErrors({\n          [key]: \"required*\"\n        });\n        return false;\n      }\n    } // lodash _.isEmpty({});\n\n\n    if (isEmptyImage(this.state.image)) {\n      setErrors({\n        ['image']: \"required*\"\n      });\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleChange = target => {\n    this.setState({ ...this.state,\n      [target.name]: target.value\n    });\n  };\n\n  const handleChangeIngredients = target => {\n    this.state.ingredients[target.name] = target.value;\n    this.setState({ ...this.state,\n      ['ingredients']: this.state.ingredients\n    });\n  };\n\n  const addIngredient = () => {\n    this.state.ingredients.push('');\n    this.setState({ ...this.state,\n      ['ingredients']: this.state.ingredients\n    });\n  };\n\n  const submitForm = async e => {\n    e.preventDefault();\n    const control = await controlForm(this.state);\n\n    if (control) {\n      console.log(this.state); // handleSubmit(e, {...this.state})\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      marginTop: '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        md: 4,\n        xs: 12,\n        controlId: \"GridName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Nome*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"Nome\",\n          name: \"name\",\n          value: this.state.name,\n          onChange: e => handleChange(e.target)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        md: 4,\n        xs: 12,\n        controlId: \"GridPrice\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Prezzo Iniziale*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          placeholder: \"Prezzo\",\n          name: \"initialPrice\",\n          value: this.state.initialPrice,\n          onChange: e => handleChange(e.target)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.initialPrice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        md: 4,\n        xs: 12,\n        controlId: \"GridState\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Valuta*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          name: \"currency\",\n          value: this.state.currency,\n          onChange: e => handleChange(e.target),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"\\u20AC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"\\xA3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.currency\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      as: Col,\n      md: 4,\n      xs: 12,\n      controlId: \"GridIngredients\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Ingredienti\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this), this.state.ingredients && this.state.ingredients.length > 0 ? form.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(Form.Control, {\n        style: {\n          marginBottom: '15px'\n        },\n        placeholder: \"Ingrediente\",\n        name: index,\n        value: ingredient,\n        onChange: e => handleChangeIngredients(e.target)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"button\",\n        onClick: () => addIngredient(),\n        children: \"Aggiungi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        controlId: \"Image\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Immagine*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FileBase64, {\n          onDone: setFile.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: image.base64\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"button\",\n      onClick: submitForm,\n      children: \"Salva\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductForm, \"o+SUXTQUSJNurFcpxixiLrA9BM0=\");\n\n_c = ProductForm;\nexport default ProductForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"sources":["/home/eric/projects/pasticceriaLuana&Maria/src/components/admin/ProductForm.js"],"names":["React","useState","Form","Button","Col","Image","FileBase64","ProductForm","handleSubmit","form","setForm","image","setImage","state","errors","setErrors","setFile","file","setState","isEmptyImage","obj","prop","hasOwnProperty","JSON","stringify","controlForm","ingredients","filter","ingredient","key","value","Object","entries","handleChange","target","name","handleChangeIngredients","addIngredient","push","submitForm","e","preventDefault","control","console","log","marginTop","initialPrice","currency","length","map","index","marginBottom","bind","base64"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Form, Button, Col, Image } from 'react-bootstrap';\nimport FileBase64 from 'react-file-base64';\n\nconst ProductForm = ( { handleSubmit, form, setForm, image, setImage } ) => {\n  this.state = form\n  const [errors, setErrors] = useState({})\n\n  const setFile = (file) => {\n    setImage(file)\n    this.setState({\n      ...this.state,\n      [\"image\"]: file\n    })\n  }\n\n  const isEmptyImage = (obj) => {\n    for(var prop in obj) {\n      if(obj.hasOwnProperty(prop)) {\n        return false;\n      }\n    }\n    return JSON.stringify(obj) === JSON.stringify({});\n  }\n\n  const controlForm = (state) => {\n\n    //clean empty ingredients    \n    this.setState({\n      ...this.state,\n      ['ingredients']: this.state.ingredients.filter((ingredient) => {\n        return ingredient !== ''\n      })\n    })\n    \n    //validate handle react / react hook / yup / ..\n    for (const [key, value] of Object.entries(this.state)) {\n      if(!value){\n        setErrors({ [key]: \"required*\"})\n        return false\n      } \n    }\n    // lodash _.isEmpty({});\n    if(isEmptyImage(this.state.image)){\n      setErrors({ ['image']: \"required*\"})\n      return false \n    }\n\n    return true\n  }\n\n  const handleChange = (target) => {\n    this.setState({\n      ...this.state,\n      [target.name]: target.value\n    })\n  }\n\n  const handleChangeIngredients = (target) => {\n    this.state.ingredients[target.name] = target.value\n    this.setState({\n      ...this.state,\n      ['ingredients']: this.state.ingredients\n    })\n  }\n\n  const addIngredient = () => {\n    this.state.ingredients.push('')\n    this.setState({\n      ...this.state,\n      ['ingredients']: this.state.ingredients\n    })\n  }\n\n  const submitForm = async e => {\n    e.preventDefault();\n    const control = await controlForm(this.state)\n    if(control){\n      console.log(this.state)\n      // handleSubmit(e, {...this.state})\n    }\n  }\n\n  return(\n    <Form style={{marginTop: '50px'}}>\n      <Form.Row>\n        <Form.Group as={Col} md={4} xs={12} controlId=\"GridName\">\n          <Form.Label>Nome*</Form.Label>\n          <Form.Control placeholder=\"Nome\" name=\"name\" value={this.state.name} onChange={e => handleChange(e.target)} />\n          <p>{errors.name}</p>\n        </Form.Group>\n\n        <Form.Group as={Col} md={4} xs={12} controlId=\"GridPrice\">\n        <Form.Label>Prezzo Iniziale*</Form.Label>\n          <Form.Control type='number' placeholder=\"Prezzo\" name=\"initialPrice\" value={this.state.initialPrice} onChange={e => handleChange(e.target)} />\n          <p>{errors.initialPrice}</p>\n        </Form.Group>\n\n        <Form.Group as={Col} md={4} xs={12} controlId=\"GridState\">\n          <Form.Label>Valuta*</Form.Label>\n          <Form.Control as=\"select\" name='currency' value={this.state.currency} onChange={e => handleChange(e.target)}>\n            <option></option>\n            <option>€</option>\n            <option>$</option>\n            <option>£</option>\n          </Form.Control>\n          <p>{errors.currency}</p>\n        </Form.Group>\n      </Form.Row>\n\n      <Form.Group as={Col} md={4} xs={12} controlId=\"GridIngredients\">\n      <Form.Label>Ingredienti</Form.Label>\n        { (this.state.ingredients && this.state.ingredients.length > 0) ?\n          form.ingredients.map((ingredient, index) => (\n            <Form.Control key={index} style={{marginBottom: '15px'}} placeholder=\"Ingrediente\" name={index} value={ingredient} onChange={e => handleChangeIngredients(e.target)} />\n          )) : <br />\n        }\n        <Button variant=\"primary\" type=\"button\" onClick={() => addIngredient()}>Aggiungi</Button>\n      </Form.Group>\n\n      <Form.Row>\n        <Form.Group as={Col} controlId=\"Image\">\n          <Form.Label>Immagine*</Form.Label>\n          <br />\n          <FileBase64\n            onDone={ setFile.bind(this) } />\n          <p>{errors.image}</p>\n        </Form.Group>\n        <Form.Group as={Col}>\n          <Image src={image.base64} />\n        </Form.Group>\n      </Form.Row>\n\n      <Button variant=\"primary\" type=\"button\" onClick={submitForm}>\n        Salva\n      </Button>\n    </Form>  \n    )\n\n}\n\nexport default ProductForm\n"]},"metadata":{},"sourceType":"module"}