{"ast":null,"code":"var _jsxFileName = \"/home/eric/projects/pasticceriaLuana&Maria/src/components/admin/ProductForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button, Col, Image } from 'react-bootstrap';\nimport FileBase64 from 'react-file-base64';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductForm = ({\n  handleSubmit,\n  form,\n  setForm,\n  image,\n  setImage\n}) => {\n  _s();\n\n  const [errors, setErrors] = useState([]);\n\n  const setFile = file => {\n    setImage(file);\n    setForm({ ...form,\n      [\"image\"]: file\n    });\n  };\n\n  const isEmptyImage = obj => {\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop)) {\n        return false;\n      }\n    }\n\n    return JSON.stringify(obj) === JSON.stringify({});\n  };\n\n  const validateForm = form => {\n    var exit = false; //validate handle react / react hook / yup / ..\n\n    for (const [key, value] of Object.entries(form)) {\n      if (!value) {\n        errors.push({\n          [key]: \"required*\"\n        });\n        setErrors(errors);\n        exit = true;\n      }\n    } // lodash _.isEmpty({});\n\n\n    if (isEmptyImage(form.image)) {\n      errors.push({\n        'image': \"required*\"\n      });\n      setErrors(errors); // setErrors({\n      //   ...errors,\n      //   ['image']: \"required*\"\n      // })\n\n      exit = true;\n    }\n\n    if (exit) {\n      console.log(errors);\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleChange = target => {\n    setForm({ ...form,\n      [target.name]: target.value\n    });\n  };\n\n  const handleChangeIngredients = target => {\n    target.value ? form.ingredients[target.name] = target.value : delete form.ingredients[target.name];\n    setForm({ ...form,\n      ['ingredients']: form.ingredients\n    });\n  };\n\n  const addIngredient = () => {\n    form.ingredients.push('');\n    setForm({ ...form,\n      ['ingredients']: form.ingredients\n    });\n  };\n\n  const submitForm = e => {\n    e.preventDefault(); //clean empty ingredients    \n\n    form.ingredients = form.ingredients.filter(ingredient => {\n      return ingredient !== '';\n    });\n\n    if (validateForm(form)) {\n      handleSubmit(e, { ...form\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      marginTop: '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        md: 4,\n        xs: 12,\n        controlId: \"GridName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Nome*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"Nome\",\n          name: \"name\",\n          value: form.name,\n          onChange: e => handleChange(e.target)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors['name']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        md: 4,\n        xs: 12,\n        controlId: \"GridPrice\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Prezzo Iniziale*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          placeholder: \"Prezzo\",\n          name: \"initialPrice\",\n          value: form.initialPrice,\n          onChange: e => handleChange(e.target)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.initialPrice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        md: 4,\n        xs: 12,\n        controlId: \"GridState\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Valuta*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          name: \"currency\",\n          value: form.currency,\n          onChange: e => handleChange(e.target),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"\\u20AC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"\\xA3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.currency\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      as: Col,\n      md: 4,\n      xs: 12,\n      controlId: \"GridIngredients\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Ingredienti\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this), form.ingredients && form.ingredients.length > 0 ? form.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(Form.Control, {\n        style: {\n          marginBottom: '15px'\n        },\n        placeholder: \"Ingrediente\",\n        name: index,\n        value: ingredient,\n        onChange: e => handleChangeIngredients(e.target)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"button\",\n        onClick: () => addIngredient(),\n        children: \"Aggiungi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        controlId: \"Image\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Immagine*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FileBase64, {\n          onDone: setFile.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: '300px'\n          },\n          src: image.base64\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"button\",\n      onClick: submitForm,\n      children: \"Salva\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductForm, \"m776+Cbg+sTbTdnw1jnYcDWVlDI=\");\n\n_c = ProductForm;\nexport default ProductForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"sources":["/home/eric/projects/pasticceriaLuana&Maria/src/components/admin/ProductForm.js"],"names":["React","useState","Form","Button","Col","Image","FileBase64","ProductForm","handleSubmit","form","setForm","image","setImage","errors","setErrors","setFile","file","isEmptyImage","obj","prop","hasOwnProperty","JSON","stringify","validateForm","exit","key","value","Object","entries","push","console","log","handleChange","target","name","handleChangeIngredients","ingredients","addIngredient","submitForm","e","preventDefault","filter","ingredient","marginTop","initialPrice","currency","length","map","index","marginBottom","bind","width","base64"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Form, Button, Col, Image } from 'react-bootstrap';\nimport FileBase64 from 'react-file-base64';\n\nconst ProductForm = ( { handleSubmit, form, setForm, image, setImage } ) => {\n  const [errors, setErrors] = useState([])\n  \n  const setFile = (file) => {\n    setImage(file)\n    setForm({\n      ...form,\n      [\"image\"]: file\n    })\n  }\n\n  const isEmptyImage = (obj) => {\n    for(var prop in obj) {\n      if(obj.hasOwnProperty(prop)) {\n        return false;\n      }\n    }\n    return JSON.stringify(obj) === JSON.stringify({});\n  }\n\n  const validateForm = (form) => {\n    var exit = false\n\n    //validate handle react / react hook / yup / ..\n    for (const [key, value] of Object.entries(form)) {\n      if(!value){\n        errors.push({[key]:\"required*\"})\n        setErrors(errors)\n        exit = true\n      } \n    }\n    // lodash _.isEmpty({});\n    if(isEmptyImage(form.image)){\n      errors.push({'image':\"required*\"})\n      setErrors(errors)\n      // setErrors({\n      //   ...errors,\n      //   ['image']: \"required*\"\n      // })\n      exit = true\n    }\n\n    if(exit){\n      console.log(errors)\n      return false\n    }\n\n    return true\n    \n  }\n\n  const handleChange = (target) => {\n    setForm({\n      ...form,\n      [target.name]: target.value\n    })\n  }\n\n  const handleChangeIngredients = (target) => {\n    (target.value) ? \n      form.ingredients[target.name] = target.value \n    : delete form.ingredients[target.name];  \n    setForm({\n      ...form,\n      ['ingredients']: form.ingredients\n    })\n  }\n\n  const addIngredient = () => {\n    form.ingredients.push('')\n    setForm({\n      ...form,\n      ['ingredients']: form.ingredients\n    })\n  }\n\n  const submitForm = e => {\n    e.preventDefault()\n    //clean empty ingredients    \n    form.ingredients = form.ingredients.filter((ingredient) => {\n      return ingredient !== ''\n    })\n\n    if(validateForm(form)){\n      handleSubmit(e, {...form})\n    }\n  }\n\n  return(\n    <Form style={{marginTop: '50px'}}>\n      <Form.Row>\n        <Form.Group as={Col} md={4} xs={12} controlId=\"GridName\">\n          <Form.Label>Nome*</Form.Label>\n          <Form.Control placeholder=\"Nome\" name=\"name\" value={form.name} onChange={e => handleChange(e.target)} />\n          <p>{errors['name']}</p>\n        </Form.Group>\n\n        <Form.Group as={Col} md={4} xs={12} controlId=\"GridPrice\">\n        <Form.Label>Prezzo Iniziale*</Form.Label>\n          <Form.Control type='number' placeholder=\"Prezzo\" name=\"initialPrice\" value={form.initialPrice} onChange={e => handleChange(e.target)} />\n          <p>{errors.initialPrice}</p>\n        </Form.Group>\n\n        <Form.Group as={Col} md={4} xs={12} controlId=\"GridState\">\n          <Form.Label>Valuta*</Form.Label>\n          <Form.Control as=\"select\" name='currency' value={form.currency} onChange={e => handleChange(e.target)}>\n            <option></option>\n            <option>€</option>\n            <option>$</option>\n            <option>£</option>\n          </Form.Control>\n          <p>{errors.currency}</p>\n        </Form.Group>\n      </Form.Row>\n\n      <Form.Group as={Col} md={4} xs={12} controlId=\"GridIngredients\">\n      <Form.Label>Ingredienti</Form.Label>\n        { (form.ingredients && form.ingredients.length > 0) ?\n          form.ingredients.map((ingredient, index) => (\n            <Form.Control key={index} style={{marginBottom: '15px'}} placeholder=\"Ingrediente\" name={index} value={ingredient} onChange={e => handleChangeIngredients(e.target)} />\n          )) : <br />\n        }\n        <Button variant=\"primary\" type=\"button\" onClick={() => addIngredient()}>Aggiungi</Button>\n      </Form.Group>\n\n      <Form.Row>\n        <Form.Group as={Col} controlId=\"Image\">\n          <Form.Label>Immagine*</Form.Label>\n          <br />\n          <FileBase64\n            onDone={ setFile.bind(this) } />\n          <p>{errors.image}</p>\n        </Form.Group>\n        <Form.Group as={Col}>\n          <img style={{width: '300px'}} src={image.base64} />\n        </Form.Group>\n      </Form.Row>\n\n      <Button variant=\"primary\" type=\"button\" onClick={submitForm}>\n        Salva\n      </Button>\n    </Form>  \n    )\n\n}\n\nexport default ProductForm\n"]},"metadata":{},"sourceType":"module"}