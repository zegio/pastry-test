{"ast":null,"code":"var _jsxFileName = \"/home/eric/projects/pasticceriaLuana&Maria/src/components/admin/ProductForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport FileBase64 from 'react-file-base64';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductForm = ({\n  handleSubmit,\n  form,\n  setForm,\n  image,\n  setImage\n}) => {\n  _s();\n\n  const [errors, setErrors] = useState({});\n\n  const setFile = file => {\n    setImage(file);\n    setForm({ ...form,\n      [\"image\"]: file\n    });\n  };\n\n  const isEmptyImage = obj => {\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop)) {\n        return false;\n      }\n    }\n\n    return JSON.stringify(obj) === JSON.stringify({});\n  };\n\n  const controlForm = form => {\n    //validate handle react / react hook / yup / ..\n    for (const [key, value] of Object.entries(form)) {\n      if (!value) {\n        setErrors({\n          [key]: \"required*\"\n        });\n        return false;\n      }\n    } // lodash _.isEmpty({});\n\n\n    if (isEmptyImage(form.image)) {\n      setErrors({\n        ['image']: \"required*\"\n      });\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleChange = target => {\n    setForm({ ...form,\n      [target.name]: target.value\n    });\n  };\n\n  const submitForm = e => {\n    if (controlForm(form)) {\n      handleSubmit(e, { ...form\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      'margin-top': '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        controlId: \"formGridName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Nome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"Nome\",\n          name: \"name\",\n          value: form.name,\n          onChange: e => handleChange(e.target)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        controlId: \"formGridPrice\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Prezzo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"Prezzo\",\n          name: \"price\",\n          value: form.price,\n          onChange: e => handleChange(e.target)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"exampleForm.ControlTextarea\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Descrizione\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"textarea\",\n        rows: 3,\n        name: \"description\",\n        value: form.description,\n        onChange: e => handleChange(e.target)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        controlId: \"formGridState\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          defaultValue: \"\\u20AC\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"\\u20AC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"\\xA3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      id: \"formGridCheckbox\",\n      children: /*#__PURE__*/_jsxDEV(Form.Check, {\n        type: \"checkbox\",\n        label: \"Check me out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"button\",\n      onClick: submitForm,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this) // <form>\n  //   <label>\n  //     <p>Name</p>\n  //     <input type=\"text\" name=\"name\" value={form.name} onChange={e => handleChange(e.target)} />\n  //     <p>{errors.name}</p>\n  //   </label>\n  //   <label>\n  //     <p>Prezzo Iniziale</p>\n  //     <input type=\"number\" name=\"price\" value={form.price} onChange={e => handleChange(e.target)} />\n  //     <p>{errors.price}</p>\n  //   </label>\n  //   <label>\n  //     <p>Immagine</p>\n  //     <FileBase64\n  //       onDone={ setFile.bind(this) } />\n  //     <p>{errors.image}</p>\n  //   </label>\n  //   <div className=\"text-center\">\n  //     <img style={{width: \"200px\"}} src={image.base64} />\n  //   </div>\n  //   <div>\n  //     <button onClick={submitForm} type=\"button\">Submit</button>\n  //   </div>\n  // </form>\n  ;\n};\n\n_s(ProductForm, \"o+SUXTQUSJNurFcpxixiLrA9BM0=\");\n\n_c = ProductForm;\nexport default ProductForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"sources":["/home/eric/projects/pasticceriaLuana&Maria/src/components/admin/ProductForm.js"],"names":["React","useState","Form","Button","Col","FileBase64","ProductForm","handleSubmit","form","setForm","image","setImage","errors","setErrors","setFile","file","isEmptyImage","obj","prop","hasOwnProperty","JSON","stringify","controlForm","key","value","Object","entries","handleChange","target","name","submitForm","e","price","description"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap';\nimport FileBase64 from 'react-file-base64';\n\nconst ProductForm = ( { handleSubmit, form, setForm, image, setImage } ) => {\n\n  const [errors, setErrors] = useState({})\n\n  const setFile = (file) => {\n    setImage(file)\n    setForm({\n      ...form,\n      [\"image\"]: file\n    })\n  }\n\n  const isEmptyImage = (obj) => {\n    for(var prop in obj) {\n      if(obj.hasOwnProperty(prop)) {\n        return false;\n      }\n    }\n    return JSON.stringify(obj) === JSON.stringify({});\n  }\n\n  const controlForm = (form) => {\n    \n    //validate handle react / react hook / yup / ..\n    for (const [key, value] of Object.entries(form)) {\n      if(!value){\n        setErrors({ [key]: \"required*\"})\n        return false\n      } \n    }\n    // lodash _.isEmpty({});\n    if(isEmptyImage(form.image)){\n      setErrors({ ['image']: \"required*\"})\n      return false \n    }\n\n    return true\n  }\n\n  const handleChange = (target) => {\n    setForm({\n      ...form,\n      [target.name]: target.value\n    })\n  }\n\n  const submitForm = e => {\n    if(controlForm(form)){\n      handleSubmit(e, {...form})\n    }\n  }\n\n  return(\n    <Form style={{'margin-top': '50px'}}>\n      <Form.Row>\n        <Form.Group as={Col} controlId=\"formGridName\">\n          <Form.Label>Nome</Form.Label>\n          <Form.Control placeholder=\"Nome\" name=\"name\" value={form.name} onChange={e => handleChange(e.target)} />\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"formGridPrice\">\n        <Form.Label>Prezzo</Form.Label>\n          <Form.Control placeholder=\"Prezzo\" name=\"price\" value={form.price} onChange={e => handleChange(e.target)} />\n        </Form.Group>\n      </Form.Row>\n\n      <Form.Group controlId=\"exampleForm.ControlTextarea\">\n        <Form.Label>Descrizione</Form.Label>\n        <Form.Control as=\"textarea\" rows={3} name=\"description\" value={form.description} onChange={e => handleChange(e.target)} />\n      </Form.Group>\n      \n      <Form.Row>\n        <Form.Group as={Col} controlId=\"formGridState\">\n          <Form.Label>State</Form.Label>\n          <Form.Control as=\"select\" defaultValue=\"€\">\n            <option>€</option>\n            <option>$</option>\n            <option>£</option>\n          </Form.Control>\n        </Form.Group>\n\n      </Form.Row>\n\n      <Form.Group id=\"formGridCheckbox\">\n        <Form.Check type=\"checkbox\" label=\"Check me out\" />\n      </Form.Group>\n\n      <Button variant=\"primary\" type=\"button\" onClick={submitForm}>\n        Submit\n      </Button>\n    </Form>\n    // <form>\n    //   <label>\n    //     <p>Name</p>\n    //     <input type=\"text\" name=\"name\" value={form.name} onChange={e => handleChange(e.target)} />\n    //     <p>{errors.name}</p>\n    //   </label>\n    //   <label>\n    //     <p>Prezzo Iniziale</p>\n    //     <input type=\"number\" name=\"price\" value={form.price} onChange={e => handleChange(e.target)} />\n    //     <p>{errors.price}</p>\n    //   </label>\n    //   <label>\n    //     <p>Immagine</p>\n    //     <FileBase64\n    //       onDone={ setFile.bind(this) } />\n    //     <p>{errors.image}</p>\n    //   </label>\n    //   <div className=\"text-center\">\n    //     <img style={{width: \"200px\"}} src={image.base64} />\n    //   </div>\n    //   <div>\n    //     <button onClick={submitForm} type=\"button\">Submit</button>\n    //   </div>\n    // </form>\n  )\n\n}\n\nexport default ProductForm\n"]},"metadata":{},"sourceType":"module"}